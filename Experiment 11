#include<stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node* next;
};
struct Node* front = NULL, * rear = NULL;
void enqueue(int value){
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    if(temp == NULL)
        printf("Queue Overflow!!!!\n");
    else{
        temp->data = value;
        temp->next = NULL;
        if(front == NULL)       // if queue doesn't contain any node
            front=rear=temp;
        else{
            rear->next = temp;
            rear = temp;
        }
        printf("%d inserted to queue\n",value);
    }
}
int dequeue(){
    if(front == NULL){
        printf("Queue Underflow!!!!\n");
        return -1;
    }
    else{
        int val = front->data;
        struct Node* temp = front;
        front = front->next;
        if(front==NULL)
            rear =NULL;
        free(temp);
        return val;
    }
}
int peek(){
    if(front == NULL){
        printf("Queue is Empty\n");
        return -1;
    }
    else{
        return front->data;
    }
}
void show(){
    if(front == NULL)
        printf("Queue is Empty\n");
    else{
        printf("Queue Elements are : \n");
        struct Node* temp = front;
        while(temp != NULL){
            printf("%d\n",temp->data);
            temp = temp->next;
        }
    }
}
int main(){
	while(1){
		printf("1. Enqueue\n");
		printf("2. Dequeue\n");
		printf("3. Peek\n");
		printf("4. Show\n");
		printf("5. Exit\n");
		int choice,val;
		printf("Enter Choice : ");
		scanf("%d", &choice);
        switch(choice){
			case 1:
                printf("Enter value: ");
                scanf("%d",&val);
                enqueue(val);
				break;
			case 2:
				val = dequeue();
                if(val != -1)
                    printf("%d removed from queue\n",val);
				break;
			case 3:
                val = peek();
                if(val != -1)
                    printf("First element of the queue is %d\n",val);
				break;
			case 4:
				show();
				break;
			case 5:
				exit(0);
			default:
				printf("Invalid Choice !!!!!\n");
		}
	}
	return 0;
}
